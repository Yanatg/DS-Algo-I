// NOTES

// For these exercises, the idea is to familiarize yourself with the algorithms discussed in class. It is recommended that you do NOT have the Lectures Notes next to you and just transcribe. Try to make sense of the algorithm, put the notes away, and work on the exercise. Only refer back to the notes when you get stuck.

// A difference to also note is that, often, the Lecture Notes describe an algorithm operating on an array with index 1..n. These exercises, however, uses the C++ convention of arrays starting at index 0, and thus the elements are at 0..n-1.

// Selection sort is probably one of the easiest to analyze. It repeatedly chooses the smallest element and moves it to the front.

// The code below implements the selection sort to sort an array with n elements in non-decreasing order (from smallest to largest). Complete the blanks.

#include <iostream>
using namespace std;

void selection_sort(int a[], int n)
{
  for (int i = 0; i < n-1; i++)
  {
    // initialize a variable for the index to the minimum value
    int k = i;
    // find smallest elements from a[i] ... a[n-1]
    for (int j = i+1; j<n; j++) {
      if (a[j] < a[k]) {
        // update the index to the minimum value
        k = j;
      }
    }
    // swap a[i] with the smallest element
    swap(a[i], a[k]);
  }
}

int main()
{
  int a[1000];
  int n;
  cin >> n;
  for (int i = 0; i < n; i++)
  {
    cin >> a[i];
  }
  selection_sort(a, n);
  for (int i = 0; i < n; i++)
  {
    cout << a[i] << endl;
  }
  return 0;
}
